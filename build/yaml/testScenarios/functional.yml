parameters:
  - name: appIds
    displayName: Skill Bots App Registration Ids
    type: object
    default:
      ComposerSkillBotDotNet: ""
      EchoSkillBotComposerDotNet: ""
      EchoSkillBotDotNet: ""
      EchoSkillBotDotNetV3: ""
      EchoSkillBotJS: ""
      EchoSkillBotJSV3: ""
      EchoSkillBotPython: ""
      WaterfallSkillBotDotNet: ""
      WaterfallSkillBotJS: ""
      WaterfallSkillBotPython: ""

  - name: azureSubscription
    displayName: Azure Service Connection
    type: string

  - name: deployBuildId
    displayName: Deploy pipeline BuildId
    type: string

  - name: keyVault
    displayName: KeyVault name
    type: string

  - name: resourceGroup
    displayName: Resource Group name
    type: string

  - name: resourceSuffix
    displayName: Azure resources' name suffix
    type: string

stages:
  - stage: "Build_Functional"
    displayName: "Build Functional"
    dependsOn: []
    jobs:
      - job: "Build"
        displayName: "Build FunctionalTests.csproj"
        steps:
          - template: build.yml
            parameters:
              destZip: "Functional/Functional.zip"
              project: "Tests/Functional/Microsoft.Bot.Builder.Tests.Functional.csproj"

  - stage: "Configure_Functional"
    displayName: "Configure Functional"
    dependsOn: Build_Functional
    jobs:
      - job: "Configure"
        displayName: "Configure Consumers"
        steps:
          - template: configureConsumers.yml
            parameters:
              appIds: "${{ parameters.appIds }}"
              azureSubscription: "${{ parameters.azureSubscription }}"
              keyVault: "${{ parameters.keyVault }}"
              resourceGroup: "${{ parameters.resourceGroup }}"
              resourceSuffix: "${{ parameters.resourceSuffix }}-${{ parameters.deployBuildId }}"

  - stage: "Test_Functional"
    displayName: "Test Functional"
    dependsOn: Configure_Functional
    variables:
      Zip: "Functional/Functional.zip"
      Dll: "Microsoft.Bot.Builder.Tests.Functional.dll"
      BaseNamespace: "Microsoft.Bot.Builder.Tests.Functional.Skills"
      AppSettings: $[stageDependencies.Configure_Functional.Configure.outputs['Configure_Consumers.ConfigureAppSettingsContent']]
    jobs:
      - job: "Test_Skills_CardActions"
        displayName: "Test Skills.CardActions"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appSettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).CardActions"
              trx: "$(BASENAMESPACE).CardActions-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
      - job: "Test_Skills_FileUpload"
        displayName: "Test Skills.FileUpload"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appSettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).FileUpload"
              trx: "$(BASENAMESPACE).FileUpload-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
      - job: "Test_Skills_MessageWithAttachment"
        displayName: "Test Skills.MessageWithAttachment"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appSettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).MessageWithAttachment"
              trx: "$(BASENAMESPACE).MessageWithAttachment-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
      - job: "Test_Skills_ProactiveMessages"
        displayName: "Test Skills.ProactiveMessages"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appSettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).ProactiveMessages"
              trx: "$(BASENAMESPACE).ProactiveMessages-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
      - job: "Test_Skills_SignIn"
        displayName: "Test Skills.SignIn"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appSettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).SignIn"
              trx: "$(BASENAMESPACE).SignIn-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
      - job: "Test_Skills_SingleTurn"
        displayName: "Test Skills.SingleTurn"
        steps:
          - checkout: none
          - template: test.yml
            parameters:
              appsettings: "$(APPSETTINGS)"
              dll: "$(DLL)"
              namespace: "$(BASENAMESPACE).SingleTurn"
              trx: "$(BASENAMESPACE).SingleTurn-$(BUILD.BUILDNUMBER).trx"
              zip: "$(ZIP)"
