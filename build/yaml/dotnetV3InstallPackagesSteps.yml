steps:
- powershell: |
   switch ("$(Registry)".ToUpper())
   {
      $null { Write-Host ("##vso[task.setvariable variable=RegistryUrl]MyGet") }
      '' { Write-Host ("##vso[task.setvariable variable=RegistryUrl]MyGet") }
      NUGET { Write-Host ("##vso[task.setvariable variable=RegistryUrl]NuGet") }
      MYGET { Write-Host ("##vso[task.setvariable variable=RegistryUrl]MyGet") }
      default { Write-Host ("##vso[task.setvariable variable=RegistryUrl]$(Registry)") }
   }
  displayName: 'Read registry URL variable'

- template: validateRegistryAndBBVersionSteps.yml

- powershell: |
   Write-Host "BBVersion: "$(BBVersion)
   if ("$(BBVersion)" -eq "stable")
   {
     $version = ""     
   }
   elseif ("$(BBVersion)" -eq "preview") 
   {
     $version = ""     
   }
   else
   {
     $version = '-Version ' + '"$(BBVersion)"'     
   }

   Write-Host "RegistryUrl: "$(RegistryUrl)
   if ("$(RegistryUrl)" -eq "MyGet")
   {
      $source = ' -Source "https://botbuilder.myget.org/F/botbuilder-v3-dotnet-daily/api/v3/index.json"'
   }
   elseif("$(RegistryUrl)" -eq "NuGet")
   {
      $source = ""
   }
   else
   {
      $source = " -Source `"$(RegistryUrl)`""
   }

   $InstallPackageParameters = "$version" + "$source"
   echo "##vso[task.setvariable variable=InstallPackageParameters]$InstallPackageParameters"
  failOnStderr: true
  displayName: 'Set BotBuilder Packages Version'

- task: NuGetCommand@2
  displayName: 'Install Microsoft.Bot.Builder'
  inputs:
    command: custom
    arguments: 'update $(Parameters.packages)/packages.config -Id Microsoft.Bot.Builder $(InstallPackageParameters) -RepositoryPath $(Parameters.packages)/packages'

- task: NuGetCommand@2
  displayName: 'Install Microsoft.Bot.Builder.Azure'
  inputs:
    command: custom
    arguments: 'update $(Parameters.packages)/packages.config -Id Microsoft.Bot.Builder.Azure $(InstallPackageParameters) -RepositoryPath $(Parameters.packages)/packages'

- task: NuGetCommand@2
  displayName: 'Install Microsoft.Bot.Builder.History'
  inputs:
    command: custom
    arguments: 'update $(Parameters.packages)/packages.config -Id Microsoft.Bot.Builder.History $(InstallPackageParameters) -RepositoryPath $(Parameters.packages)/packages'
