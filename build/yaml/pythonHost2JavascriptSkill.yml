#
# This YAML deploys a Python Host bot, deploys a Skill JS bot, then runs the functional test
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'Debug'
  # AzureDeploymentPassword: define this in Azure
  # AzureDeploymentUser: define this in Azure
  # AzureSubscription: define this in Azure
  # DeleteResourceGroup (Optional): define this in Azure
  # PyJsHostAppId: define this in Azure
  # PyJsHostAppSecret: define this in Azure
  # PyJsHostBotName: define this in Azure
  # PyJsSkillAppId: define this in Azure
  # PyJsSkillAppSecret: define this in Azure
  # PyJsSkillBotName: define this in Azure
  # SdkVersion (Optional): define this in Azure

pool:
  vmImage: 'windows-2019'

stages:
- stage: Deploy
  jobs:
    - job: Deploy_Host
      pool:
        vmImage: 'ubuntu-latest'
      variables:
        Parameters.sourceLocation: 'SkillsFunctionalTests/python/host'
        BotName: $(PyJsHostBotName)
        DeployAppId: $(PyJsHostAppId)
        DeployAppSecret: $(PyJsHostAppSecret)
        TemplateLocation: 'SkillsFunctionalTests/python/host/deploymentTemplates/template-with-new-rg.json'
      steps:
      - powershell: |
         Write-host "Setting config file"
         $file = "$(System.DefaultWorkingDirectory)/$(Parameters.sourceLocation)/.env";
         $content = Get-Content -Raw $file | ConvertFrom-StringData;
         $content.SKILL_BOT_APP_ID = "$(PyJsSkillAppId)";
         $content.SKILL_BOT_ENDPOINT = "https://$(PyJsSkillBotName).azurewebsites.net/api/messages";
         $content.SKILL_HOST_ENDPOINT = "https://$(PyJsHostBotName).azurewebsites.net/api/skills";

         Clear-Content $file;
         foreach ($key in $content.keys) { Add-Content $file "$key=$($content.$key)" };
        displayName: 'Update .env file'

      - template: pythonDeploySteps.yml

    - job: Deploy_Skill
      variables:
        Parameters.sourceLocation: 'SkillsFunctionalTests/javascript/skill'
        BotName: $(PyJsSkillBotName)
        DeployAppId: $(PyJsSkillAppId)
        DeployAppSecret: $(PyJsSkillAppSecret)
        TemplateLocation: 'SkillsFunctionalTests/javascript/skill/DeploymentTemplates/template-with-new-rg.json'
      steps:
      - template: javascriptDeploySteps.yml

- stage: Test
  dependsOn: Deploy
  jobs:
    - job: Run_Functional_Test
      variables:
        HostBotName: $(PyJsHostBotName)
        Parameters.project: 'SkillsFunctionalTests/tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
        Parameters.solution: 'SkillsFunctionalTests/tests/SkillFunctionalTests.sln'
      steps:
      - template: functionalTestSteps.yml

- stage: Cleanup
  dependsOn:
  - Deploy
  - Test
  condition: always()
  jobs:
    - job: Delete_RG
      steps:
      - task: AzureCLI@1
        displayName: 'Delete Resource Group'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az group delete -n "$(PyJsHostBotName)-RG" --yes
           call az group delete -n "$(PyJsSkillBotName)-RG" --yes
        condition: and(always(), ne(variables['DeleteResourceGroup'], 'false'))
