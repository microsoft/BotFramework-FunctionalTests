#
# Deletes resources from Deploy & Shared Pipelines for the Skills Functional Tests.
#

name: $(BUILD.BUILDID)
trigger: none
pr: none

variables:
  ## Azure Resources (Define these variables in Azure)
  # AzureSubscription: Service Connection Name to Manage Azure resources.
  # AppServicePlanDotNetName: Name of the App Service Plan for DotNet bots.
  # AppServicePlanJSName: Name of the App Service Plan for JavaScript bots.
  # AppServicePlanPythonName: Name of the App Service Plan for Python bots.
  # DeployResourceGroup: (optional) Name of the Resource Group containing the bots.
  # ResourceSuffix: (optional) Alphanumeric suffix to add to the resources' name to avoid collisions.
  # SharedResourceGroup: (optional) Name of the Resource Group containing the shared resources.

  ## Internal variables
  InternalAppInsightsName: "bffnappinsights$($env:RESOURCESUFFIX)"
  InternalAppServicePlanDotNetName: $(APPSERVICEPLANDOTNETNAME)$($env:RESOURCESUFFIX)
  InternalAppServicePlanJSName: $(APPSERVICEPLANJSNAME)$($env:RESOURCESUFFIX)
  InternalAppServicePlanPythonName: $(APPSERVICEPLANPYTHONNAME)$($env:RESOURCESUFFIX)
  InternalCosmosDBName: "bffnbotstatedb$($env:RESOURCESUFFIX)"
  InternalContainerRegistryName: "bffncontainerregistry$($env:RESOURCESUFFIX)"
  InternalKeyVaultName: "bffnbotkeyvault$($env:RESOURCESUFFIX)"
  InternalBotResourceGroupName: $[coalesce(variables['DEPLOYRESOURCEGROUP'], 'BFFN')]
  InternalSharedResourceGroupName: $[coalesce(variables['SHAREDRESOURCEGROUP'], 'BFFN-Shared')]
  InternalVirtualNetworkName: "bffnvirtualnetwork$($env:RESOURCESUFFIX)"

pool:
  vmImage: "windows-2019"

stages:
- stage: "Delete_DotNet_Resource_Group"
  displayName: "Delete DotNet's Resource Group"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - template: ../common/deleteResourceGroup.yml
          parameters:
            azureSubscription: $(AZURESUBSCRIPTION)
            name: "$(INTERNALBOTRESOURCEGROUPNAME)-DotNet"

- stage: "Delete_JS_Resource_Group"
  displayName: "Delete JS's Resource Group"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - template: ../common/deleteResourceGroup.yml
          parameters:
            azureSubscription: $(AZURESUBSCRIPTION)
            name: "$(INTERNALBOTRESOURCEGROUPNAME)-JS"

- stage: "Delete_Python_Resource_Group"
  displayName: "Delete Python's Resource Group"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - template: ../common/deleteResourceGroup.yml
          parameters:
            azureSubscription: $(AZURESUBSCRIPTION)
            name: "$(INTERNALBOTRESOURCEGROUPNAME)-Python"

- stage: "Delete_App_Service_Plan_DotNet"
  displayName: "Delete App Service Plan (DotNet)"
  dependsOn: 
    - Delete_DotNet_Resource_Group
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete App Service Plan (DotNet)"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALAPPSERVICEPLANDOTNETNAME)..."
              $exists = az appservice plan show --name "$(INTERNALAPPSERVICEPLANDOTNETNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
              if ($exists) {
                Write-Host "Deleting $(INTERNALAPPSERVICEPLANDOTNETNAME)..."
                az appservice plan delete --name "$(INTERNALAPPSERVICEPLANDOTNETNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --yes
              } else {
                Write-Host "No pre-existing $(INTERNALAPPSERVICEPLANDOTNETNAME) resource found."
              }

- stage: "Delete_App_Service_Plan_JS"
  displayName: "Delete App Service Plan (JS)"
  dependsOn: 
    - Delete_JS_Resource_Group
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete App Service Plan (JS)"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALAPPSERVICEPLANJSNAME)..."
              $exists = az appservice plan show --name "$(INTERNALAPPSERVICEPLANJSNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
              if ($exists) {
                Write-Host "Deleting $(INTERNALAPPSERVICEPLANJSNAME)..."
                az appservice plan delete --name "$(INTERNALAPPSERVICEPLANJSNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --yes
              } else {
                Write-Host "No pre-existing $(INTERNALAPPSERVICEPLANJSNAME) resource found."
              }

- stage: "Delete_App_Service_Plan_Python"
  displayName: "Delete App Service Plan (Python)"
  dependsOn:
    - Delete_Python_Resource_Group
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete App Service Plan (Python)"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALAPPSERVICEPLANPYTHONNAME)..."
              $exists = az appservice plan show --name "$(INTERNALAPPSERVICEPLANPYTHONNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
              if ($exists) {
                Write-Host "Deleting $(INTERNALAPPSERVICEPLANPYTHONNAME)..."
                az appservice plan delete --name "$(INTERNALAPPSERVICEPLANPYTHONNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --yes
              } else {
                Write-Host "No pre-existing $(INTERNALAPPSERVICEPLANPYTHONNAME) resource found."
              }

- stage: "Delete_Virtual_Network"
  displayName: "Delete Virtual Network"
  dependsOn:
    - Delete_App_Service_Plan_DotNet
    - Delete_App_Service_Plan_JS
    - Delete_App_Service_Plan_Python
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete Virtual Network"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALVIRTUALNETWORKNAME)..."
              $exists = az network vnet show --name "$(INTERNALVIRTUALNETWORKNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
              if ($exists) {
                Write-Host "Deleting $(INTERNALVIRTUALNETWORKNAME)..."
                az network vnet delete --name "$(INTERNALVIRTUALNETWORKNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
              } else {
                Write-Host "No pre-existing $(INTERNALVIRTUALNETWORKNAME) resource found."
              }

- stage: "Delete_App_Registrations"
  displayName: "Delete App Registrations"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - template: deleteAppRegistrations.yml
          parameters:
            azureSubscription: "$(AZURESUBSCRIPTION)"
            keyVault: "$(INTERNALKEYVAULTNAME)"
            resourceGroup: "$(INTERNALSHAREDRESOURCEGROUPNAME)"

- stage: "Delete_Key_Vault"
  displayName: "Delete Key Vault"
  dependsOn: 
    - Delete_App_Registrations
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete Key Vault"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALKEYVAULTNAME)..."
              $exists = az keyvault list --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --query "[?name == '$(INTERNALKEYVAULTNAME)']" | ConvertFrom-Json
              if ($exists) {
                Write-Host "Deleting $(INTERNALKEYVAULTNAME)..."
                az keyvault delete --name "$(INTERNALKEYVAULTNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
                az keyvault purge --name "$(INTERNALKEYVAULTNAME)"
              } else {
                Write-Host "No pre-existing $(INTERNALKEYVAULTNAME) resource found."
              }

- stage: "Delete_App_Insights"
  displayName: "Delete App Insights"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete App Insights"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              az config set extension.use_dynamic_install=yes_without_prompt
              az feature register --name AIWorkspacePreview --namespace microsoft.insights
              Write-Host "Looking for $(INTERNALAPPINSIGHTSNAME)..."
              if ((az group exists -n "$(INTERNALSHAREDRESOURCEGROUPNAME)") -eq "true") {
                $exists = az monitor app-insights component show --app "$(INTERNALAPPINSIGHTSNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
                if ($exists) {
                  Write-Host "Deleting $(INTERNALAPPINSIGHTSNAME)..."
                  az monitor app-insights component delete --app "$(INTERNALAPPINSIGHTSNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)"
                } else {
                  Write-Host "No pre-existing $(INTERNALAPPINSIGHTSNAME) resource found."
                }
              } else {
                Write-Host "No pre-existing $(INTERNALSHAREDRESOURCEGROUPNAME) group found."
              }

- stage: "Delete_CosmosDB"
  displayName: "Delete CosmosDB"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete CosmosDB"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALCOSMOSDBNAME)..."
              $exists = az cosmosdb check-name-exists --name "$(INTERNALCOSMOSDBNAME)"
              if ($exists -eq $true) {
                Write-Host "Deleting $(INTERNALCOSMOSDBNAME)..."
                az cosmosdb delete --name "$(INTERNALCOSMOSDBNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --yes
              } else {
                Write-Host "No pre-existing $(INTERNALCOSMOSDBNAME) resource found."
              }

- stage: "Delete_Container_Registry"
  displayName: "Delete Container Registry"
  dependsOn: []
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - task: AzureCLI@2
          displayName: "Delete Container Registry"
          inputs:
            azureSubscription: $(AZURESUBSCRIPTION)
            scriptType: pscore
            scriptLocation: inlineScript
            inlineScript: |
              Write-Host "Looking for $(INTERNALCONTAINERREGISTRYNAME)..."
              $resource = az acr check-name --name "$(INTERNALCONTAINERREGISTRYNAME)" | ConvertFrom-Json
              if ($resource.nameAvailable) {
                Write-Host "No pre-existing $(INTERNALCONTAINERREGISTRYNAME) resource found."
              } else {
                Write-Host "Deleting $(INTERNALCONTAINERREGISTRYNAME)..."
                az acr delete --name "$(INTERNALCONTAINERREGISTRYNAME)" --resource-group "$(INTERNALSHAREDRESOURCEGROUPNAME)" --yes
              }

- stage: "Delete_Shared_Resource_Group"
  displayName: "Delete Shared Resource Group"
  dependsOn:
    - Delete_Virtual_Network
    - Delete_App_Registrations
    - Delete_Key_Vault
    - Delete_App_Insights
    - Delete_CosmosDB
    - Delete_Container_Registry
  jobs:
    - job: "Delete"
      displayName: "Delete steps"
      steps:
        - checkout: none
        - template: ../common/deleteResourceGroup.yml
          parameters:
            azureSubscription: $(AZURESUBSCRIPTION)
            name: "$(INTERNALSHAREDRESOURCEGROUPNAME)"

