#
# This YAML deploys a Javascript Host bot and a Python Skill bot, then runs the functional test
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

variables:
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'Debug'
  # AzureDeploymentPassword: define this in Azure
  # AzureDeploymentUser: define this in Azure
  # AzureSubscription: define this in Azure
  # DeleteResourceGroup (Optional): define this in Azure
  # JsPyHostAppId: define this in Azure
  # JsPyHostAppSecret: define this in Azure
  # JsPyHostBotName: define this in Azure
  # JsPySkillAppId: define this in Azure
  # JsPySkillAppSecret: define this in Azure
  # JsPySkillBotName: define this in Azure
  # SdkVersion (Optional): define this in Azure

pool:
  vmImage: 'windows-2019'

stages:
- stage: Deploy
  jobs:
    - job: Deploy_Host
      variables:
        Parameters.sourceLocation: 'SkillsFunctionalTests/javascript/host'
        BotName: $(JsPyHostBotName)
        DeployAppId: $(JsPyHostAppId)
        DeployAppSecret: $(JsPyHostAppSecret)
        TemplateLocation: 'SkillsFunctionalTests/javascript/host/DeploymentTemplates/template-with-new-rg.json'
      steps:
      - powershell: |
         Write-host "Setting values in .env file"
         $file = "$(System.DefaultWorkingDirectory)/SkillsFunctionalTests/javascript/host/.env";
         $content = Get-Content -Raw $file | ConvertFrom-StringData;
      
         $content.SkillHostEndpoint = "https://$(JsPyHostBotName).azurewebsites.net/api/skills";
         $content.SkillId = "EchoSkillBot";
         $content.SkillAppId = "$(JsPySkillAppId)";
         $content.SkillEndpoint = "https://$(JsPySkillBotName).azurewebsites.net/api/messages";
      
         Clear-Content $file;
         foreach ($key in $content.keys) { Add-Content $file "$key=$($content.$key)" };
        displayName: 'Update .env file'
     
      - template: javascriptDeploySteps.yml

    - job: Deploy_Skill
      pool:
        vmImage: 'ubuntu-latest'
      variables:
        Parameters.sourceLocation: 'SkillsFunctionalTests/python/skill'
        BotName: $(JsPySkillBotName)
        DeployAppId: $(JsPySkillAppId)
        DeployAppSecret: $(JsPySkillAppSecret)
        TemplateLocation: 'SkillsFunctionalTests/python/skill/deploymentTemplates/template-with-new-rg.json'
      steps:
      - template: pythonDeploySteps.yml

- stage: Test
  dependsOn: Deploy
  jobs:
    - job: Run_Functional_Test
      variables:
        HostBotName: $(JsPyHostBotName)
        Parameters.project: 'SkillsFunctionalTests/tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
        Parameters.solution: 'SkillsFunctionalTests/tests/SkillFunctionalTests.sln'
      steps:
      - template: functionalTestSteps.yml

- stage: Cleanup
  dependsOn: 
  - Deploy 
  - Test
  condition: always()
  jobs:
    - job: Delete_RG
      steps:
      - task: AzureCLI@1
        displayName: 'Delete Resource Group'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az group delete -n "$(JsPyHostBotName)-RG" --yes
           call az group delete -n "$(JsPySkillBotName)-RG" --yes
        condition: and(always(), ne(variables['DeleteResourceGroup'], 'false')) 