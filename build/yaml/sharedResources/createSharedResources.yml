#
# Creates the shared resources needed for the Skills Functional Tests.
#

name: $(Build.BuildId)
trigger: none
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  InternalAppInsightsName: 'bffnappinsights$($env:ResourceSuffix)'
  InternalAppServicePlanLinuxName: 'bffnbotsappservicelinux$($env:ResourceSuffix)'
  InternalAppServicePlanWindowsName: 'bffnbotsappservicewin$($env:ResourceSuffix)'
  InternalCosmosDBName: 'bffnbotstatedb$($env:ResourceSuffix)'
  InternalKeyVaultName: 'bffnbotkeyvault$($env:ResourceSuffix)'
  InternalResourceGroupName: $[coalesce(variables['ResourceGroupName'], 'bffnshared')]
  # AzureSubscription: define in Azure
  # KeyVaultObjectId: define in Azure
  # AppServicePlanPricingTier: (optional) define in Azure
  # ResourceGroupName: (optional) define in Azure
  # ResourceSuffix: (optional) define in Azure

stages:
- stage: Create_Resource_Group_Windows
  displayName: Create Resource Group (Windows)
  jobs:
    - job: Create_Resource_Group_Windows
      displayName: 'Create steps'
      steps:
      - checkout: none
      - task: AzureCLI@2
        displayName: 'Create $(InternalResourceGroupName)'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az group create --name "$(InternalResourceGroupName)" --location "westus"'

- stage: Create_Resource_Group_Linux
  displayName: Create Resource Group (Linux)
  dependsOn: []
  jobs:
    - job: Create_Resource_Group_Linux
      displayName: 'Create steps'
      steps:
      - checkout: none
      - task: AzureCLI@2
        displayName: 'Create $(InternalResourceGroupName)-linux'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az group create --name "$(InternalResourceGroupName)-linux" --location "westus"'

- stage: Create_CosmosDB
  displayName: Create CosmosDB
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_Cosmos_DB
      displayName: 'Deploy steps'
      steps:
      - task: AzureCLI@2
        displayName: 'Deploy CosmosDB'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az deployment group create --name "$(InternalCosmosDBName)" --resource-group "$(InternalResourceGroupName)" --template-file build/templates/template-cosmosdb-resources.json --parameters accountName="$(InternalCosmosDBName)" databaseName="$(InternalCosmosDBName)"'

- stage: Create_Key_Vault
  displayName: Create Key Vault
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_Key_Vault
      displayName: 'Deploy steps'
      steps:
      - task: AzureCLI@2
        displayName: 'Deploy Key Vault'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az deployment group create --name "$(InternalKeyVaultName)" --resource-group "$(InternalResourceGroupName)" --template-file build/templates/template-key-vault-resources.json --parameters keyVaultName="$(InternalKeyVaultName)" objectId="$(KeyVaultObjectId)"'

- stage: Create_App_Registrations
  displayName: Create App Registrations
  dependsOn: Create_Key_Vault
  jobs:
    - job: Create_App_Registrations
      displayName: 'Create steps'
      steps:
      - checkout: none
      - template: createAppRegistrations.yml
        parameters: 
          keyVault: '$(InternalKeyVaultName)'

- stage: Create_App_Service_Plan_Windows
  displayName: Create App Service Plan (Windows)
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_App_Service_Plan_Windows
      displayName: 'Deploy steps'
      steps:
      - task: AzureCLI@2
        displayName: 'Deploy App Service Plan (Windows)'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $appServicePlanPricingTier = if($env:AppServicePlanPricingTier) { "newAppServicePlanSku=$env:AppServicePlanPricingTier" };
            
            az deployment group create --name "$(InternalAppServicePlanWindowsName)" --resource-group "$(InternalResourceGroupName)" --template-file build/templates/template-service-plan-windows-resources.json --parameters $appServicePlanPricingTier newAppServicePlanName="$(InternalAppServicePlanWindowsName)"

- stage: Create_App_Service_Plan_Linux
  displayName: Create App Service Plan (Linux)
  dependsOn: Create_Resource_Group_Linux
  jobs:
    - job: Deploy_App_Service_Plan_Linux
      displayName: 'Deploy steps'
      steps:
      - task: AzureCLI@2
        displayName: 'Deploy App Service Plan (Linux)'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: |
            $appServicePlanPricingTier = if($env:AppServicePlanPricingTier) { "newAppServicePlanSku=$env:AppServicePlanPricingTier" };

            az deployment group create --name "$(InternalAppServicePlanLinuxName)" --resource-group "$(InternalResourceGroupName)-linux" --template-file build/templates/template-service-plan-linux-resources.json --parameters $appServicePlanPricingTier newAppServicePlanName="$(InternalAppServicePlanLinuxName)"

- stage: Create_App_Insights
  displayName: Create App Insights
  dependsOn: Create_Resource_Group_Windows
  jobs:
    - job: Deploy_App_Insights
      displayName: 'Deploy steps'
      steps:
      - task: AzureCLI@2
        displayName: 'Deploy App Insights'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptType: pscore
          scriptLocation: inlineScript
          inlineScript: 'az deployment group create --name "$(InternalAppInsightsName)" --resource-group "$(InternalResourceGroupName)" --template-file build/templates/template-app-insights-resources.json --parameters appInsightsName="$(InternalAppInsightsName)"'
