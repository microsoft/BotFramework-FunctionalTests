parameters:
  project: {}
  output: {}
  
steps:
# Prepare DotNet deploy
- task: AzureCLI@1
  displayName: 'Prepare Deploy'
  inputs:
    azureSubscription: $(AzureSubscription)
    scriptLocation: inlineScript
    inlineScript: 'az bot prepare-deploy --lang Csharp --code-dir ${{ parameters.project.directory }}/runtime/azurewebapp --proj-file-path Microsoft.BotFramework.Composer.WebApp.csproj --output json'

# Build Bot
- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '${{ parameters.project.directory }}/runtime/azurewebapp/Microsoft.BotFramework.Composer.WebApp.csproj'
    arguments: '-c release -o ${{ parameters.output.path }}'
    modifyOutputPath: false
    zipAfterPublish: false

# Arrange composer folders & files
- powershell: |
    $composerDialogs = "${{ parameters.output.path }}/ComposerDialogs"
    Remove-Item $composerDialogs -Recurse -ErrorAction Ignore

    Copy-Item -Path (Get-Item -Path ${{ parameters.project.directory }}/* -Exclude ('runtime', 'scripts', '*.ps1', 'readme.md', '*.botproj', '.gitignore')).FullName -Destination $composerDialogs -Recurse -Force -Container
  displayName: 'Prepare Composer'

# Zip bot
- powershell: |
    7z.exe a -tzip "${{ parameters.output.path }}/${{ parameters.output.zip }}.zip" "$(System.DefaultWorkingDirectory)/${{ parameters.output.path }}/*" -aoa
  displayName: 'Zip bot'
