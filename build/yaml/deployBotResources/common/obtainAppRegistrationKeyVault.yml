parameters:
  botName: ''

steps:
  - task: AzureCLI@2
    displayName: 'Obtain App Registration from KeyVault'
    inputs:
      azureSubscription: $(AzureSubscription)
      scriptType: ps
      failOnStandardError: true
      scriptLocation: inlineScript
      inlineScript: |
        $entries = az keyvault secret list --vault-name "bffnbotkeyvault" | ConvertFrom-Json | Where-Object {$_.name -like "${{ parameters.botName }}*"};

        $secret = New-Object -TypeName psobject;

        foreach ($entry in $entries) {
          $secretVault = az keyvault secret show --id $entry.id | ConvertFrom-Json;
          $secret | Add-Member -MemberType NoteProperty -Name ($secretVault.name -replace "${{ parameters.botName }}", "") -Value "$($secretVault.value)";
        }

        if ([string]::IsNullOrEmpty($secret.AppId)) {
          Write-Host  "##vso[task.LogIssue type=error;]AppId is Null or Empty"
          Write-Host "##vso[task.complete result=Failed;]DONE"
        }

        if ([string]::IsNullOrEmpty($secret.AppSecret)) {
          Write-Host  "##vso[task.LogIssue type=error;]AppSecret is Null or Empty"
          Write-Host "##vso[task.complete result=Failed;]DONE"
        }

        Write-Host "##vso[task.setvariable variable=AppId]$($secret.AppId)"
        Write-Host "##vso[task.setvariable variable=AppSecret]$($secret.AppSecret)"
