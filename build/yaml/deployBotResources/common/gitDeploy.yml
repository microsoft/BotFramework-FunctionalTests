parameters:
  botName: ''
  resourceGroup: ''
  project: {}

steps:
  - powershell: |
      git config --global user.name "${{ parameters.botName }}$($env:ResourceSuffix)"
      git config --global user.email "${{ parameters.botName }}$($env:ResourceSuffix)@pipeline.com"
      git init
      git add .
      git commit -m "cibuildtest"
      git remote add azure https://$(AzureDeploymentUser):$(AzureDeploymentPassword)@${{ parameters.botName }}$($env:ResourceSuffix).scm.azurewebsites.net:443/${{ parameters.botName }}$($env:ResourceSuffix).git
      git push azure master
    workingDirectory: '${{ parameters.project.directory }}'
    displayName: 'Git bot deployment'

  - task: AzureCLI@2
    displayName: 'Validate git deployment'
    inputs:
      azureSubscription: $(AzureSubscription)
      scriptType: ps
      scriptLocation: inlineScript
      inlineScript: |
        #Getting logs from Azure
        az webapp log download --name "${{ parameters.botName }}$($env:ResourceSuffix)" --resource-group "${{ parameters.resourceGroup }}" --log-file "$(System.DefaultWorkingDirectory)\logs.zip";
        Expand-Archive "$(System.DefaultWorkingDirectory)\logs.zip" -DestinationPath "$(System.DefaultWorkingDirectory)\logs";
        $file = "$(System.DefaultWorkingDirectory)/logs/deployments/*/log.log"
        $content = Get-Content $file

        #Validates if the log contains the Deployment successful line
        Write-Host "Validating deployment log."
        $containsWord = $content | %{$_ -match "Deployment successful"}
        if ($containsWord -contains $true) {
            Write-Host "Deployment successful, check the git deploy step for more information."
        } else {
            Write-Host "An error occurred during the deploy."
            Write-Output $content
            Write-Error "An error occurred during the deploy."
        }
    condition: succeededOrFailed()
