#
# Build a C# Skill bot. Deploy it and a Javascript Host bot and run functional tests.
#

# "name" here defines the build number format. Build number is accessed via $(Build.BuildNumber)
name: $(Build.BuildId)
trigger: none
pr: none

variables:
  BuildConfiguration: 'Debug'
  BuildPlatform: 'any cpu'
  runCodesignValidationInjection: false
  skipComponentGovernanceDetection: true
  # AzureSubscription: define in Azure
  # BotBuilderPackageVersionHost: (optional) define in Azure
  # BotBuilderPackageVersionSkill: (optional) define in Azure
  # DeleteResourceGroup: (optional) define in Azure
  # JsDotNetHostAppId: define in Azure
  # JsDotNetHostAppSecret: define in Azure
  # JsDotNetHostBotName: define in Azure
  # JsDotNetSkillAppId: define in Azure
  # JsDotNetSkillAppSecret: define in Azure
  # JsDotNetSkillBotName: define in Azure
  # NetCoreSdkVersionSkill: define in Azure
  # RegistryUrlHost: (optional) define in Azure
  # RegistryUrlSkill: (optional) define in Azure
  # TestFilter: (optional) define in Azure. Example: '&TestCategory!=SkipForV3Bots'

pool:
  vmImage: 'windows-2019'

stages:
- stage: Prepare
  condition: and(succeeded(), ne(variables['DeleteResourceGroup'], 'false'))
  jobs:
    - job: Delete_Preexisting_Resources
      variables:
        HostBotName: $(JsDotNetHostBotName)
        SkillBotName: $(JsDotNetSkillBotName)
      steps:
      - template: cleanResourcesStep.yml

- stage: Build
  dependsOn: []    # makes this run in parallel
  jobs:
    - job: Validate_Skill_NetCore_Version
      variables:
        Parameters.netCoreSdkVersion: $(NetCoreSdkVersionSkill)
      steps:
      - template: dotnetValidateNetCoreSdkVersion.yml

    - job: Build_Skill_Bot
      variables:
        Registry: $[variables.RegistryUrlSkill]
        BotBuilderPackageVersion: $[variables.BotBuilderPackageVersionSkill]
        BotType: EchoSkill
      steps:
      - template: dotnetSetPaths.yml
      - template: dotnetInstallPackagesSteps.yml
      - template: dotnetBuildSteps.yml
      - template: dotnetTagBotBuilderVersion.yml

- stage: Deploy
  dependsOn:
  - Prepare
  - Build
  condition: succeeded('Build')
  jobs:
    - job: Deploy_Host
      variables:
        HostBotName: $(JsDotNetHostBotName)
        SkillBotName: $(JsDotNetSkillBotName)
        SkillAppId: $(JsDotNetSkillAppId)
        BotName: $(JsDotNetHostBotName)
        BotGroup: '$(BotName)-RG'
        DeployAppId: $(JsDotNetHostAppId)
        DeployAppSecret: $(JsDotNetHostAppSecret)
        Registry: $[variables.RegistryUrlHost]
        BotBuilderPackageVersion: $[variables.BotBuilderPackageVersionHost]
        Parameters.sourceLocation: 'Bots/JavaScript/Consumers/CodeFirst/SimpleHostBot'
        TemplateLocation: 'Bots/JavaScript/Consumers/CodeFirst/SimpleHostBot/deploymentTemplates/template-with-new-rg.json'
      steps:
      - template: javascriptSetConfigFileSteps.yml
      - template: javascriptDeploySteps.yml

    - job: Deploy_Skill
      variables:
        BotName: $(JsDotNetSkillBotName)
        BotGroup: '$(BotName)-RG'
        DeployAppId: $(JsDotNetSkillAppId)
        DeployAppSecret: $(JsDotNetSkillAppSecret)
        Registry: $[variables.RegistryUrlSkill]
        BotBuilderPackageVersion: $[variables.BotBuilderPackageVersionSkill]
        BotType: EchoSkill
      steps:
      - template: dotnetSetPaths.yml
      - template: dotnetDeploySteps.yml

    - job: Configure_OAuth
      dependsOn: Deploy_Skill
      steps:
      - task: AzureCLI@1
        displayName: 'Configure skill OAuth connection'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az bot show -g "$(JsDotNetSkillBotName)-RG" -n "$(JsDotNetSkillBotName)"
           call az bot authsetting create -g "$(JsDotNetSkillBotName)-RG" -n "$(JsDotNetSkillBotName)" -c TestOAuthProvider --client-id "$(JsDotNetSkillAppId)" --client-secret '$(JsDotNetSkillAppSecret)'' --service "oauth2" --provider-scope-string '""' --parameters authorizationUrl=https://webjobs.botframework.com/api/testauthprovider/authorize tokenUrl=https://webjobs.botframework.com/api/testauthprovider/token refreshUrl=https://webjobs.botframework.com/api/testauthprovider/refresh clientId="$(JsDotNetSkillAppId)" clientSecret="$(JsDotNetSkillAppSecret)"
        condition: always()

- stage: Test
  dependsOn: Deploy
  condition: succeeded('Deploy')
  jobs:
    - job: Run_Functional_Test
      variables:
        HostBotName: $(JsDotNetHostBotName)
        Parameters.project: 'Tests/SkillFunctionalTests/SkillFunctionalTests.csproj'
        DefaultTestFilter: ''
        DotNetTestFilter: $[ coalesce( variables['TestFilter'], variables['DefaultTestFilter'] ) ]
      steps:
      - template: functionalTestSteps.yml

- stage: Cleanup
  dependsOn:
  - Deploy
  - Test
  condition: and(or(succeeded('Build'), failed('Prepare')), ne(variables['DeleteResourceGroup'], 'false'))
  jobs:
    - job: Delete_RG
      steps:
      - checkout: none  # Don't sync sources
      - task: AzureCLI@1
        displayName: 'Delete Resource Group'
        inputs:
          azureSubscription: $(AzureSubscription)
          scriptLocation: inlineScript
          inlineScript: |
           call az group delete -n "$(JsDotNetHostBotName)-RG" --yes --no-wait
           call az group delete -n "$(JsDotNetSkillBotName)-RG" --yes --no-wait
